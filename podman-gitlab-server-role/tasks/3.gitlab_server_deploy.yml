---
- name: "Check for GitLab Server Container Service File"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  stat:
    path: "/home/{{ gitlab_service_account }}/.config/systemd/user/container-{{ gitlab_server_name }}.service"
  register: gitlab_service_file_status
  tags:
    - initial_setup
    - create_gitlab
    - stop_gitlab
    - restart_gitlab
    - remove_gitlab
    - destroy_gitlab

- name: "Check GitLab SSL Directory"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  stat:
    path: "/home/{{ gitlab_service_account }}/.local/share/containers/storage/volumes/git_app_data/_data/ssl"
  register: gitlab_ssl_dir_status
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Open Firewall for {{ gitlab_server_name }} Container"
  become: yes
  firewalld:
    port: "{{ item }}"
    state: enabled
    permanent: yes
  with_items:
    - "{{ gitlab_firewall_ssl_port }}"
    - "{{ gitlab_firewall_ssh_port }}"
  tags:
    - initial_setup
    - create_gitlab
  register: firewall_status

- name: "Deploy GitLab | Reload FirewallD"
  become: yes
  shell: "firewall-cmd --complete-reload"
  when: firewall_status.results.changed | bool

- name: "Deploy GitLab | Create {{ gitlab_server_name }} Container"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  podman_container:
    name: "{{ gitlab_server_name }}"
    image: "{{ gitlab_server_image_name }}"
    state: present
    hostname: "{{ gitlab_server_hostname }}{{ domain }}"
    restart_policy: "{{ gitlab_server_restart_policy }}"
    volumes:
      - git_app_data:/etc/gitlab
      - git_logs:/var/log/gitlab
      - git_config_data:/var/opt/gitlab
    ports:
      - "{{ gitlab_container_ssl_port }}"
      - "{{ gitlab_container_ssh_port }}"
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Pause for 30 Seconds"
  pause:
    seconds: 30
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Modify gitlab.rb to Support FQDN"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  blockinfile:
    path: "/home/{{ gitlab_service_account }}/.local/share/containers/storage/volumes/git_app_data/_data/gitlab.rb"
    block: |
     # Add Support for SSL 
     external_url "https://{{ gitlab_server_hostname }}{{ domain }}:{{ gitlab_gui_ssl_port }}/"
     nginx['ssl_certificate'] = "/etc/gitlab/ssl/{{ gitlab_server_hostname }}{{ domain }}.crt"
     nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/{{ gitlab_server_hostname }}{{ domain }}.pem"
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Create GitLab SSL Directory"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  shell: "podman exec -it {{ gitlab_server_name }} mkdir /etc/gitlab/ssl/"
  when: not gitlab_ssl_dir_status.stat.exists | bool
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Copy SSL Cert to GitLab SSL Directory"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  shell: "podman cp {{ item }}"
  with_items:
    - "/home/{{ gitlab_service_account }}/{{ gitlab_server_hostname }}{{ domain }}.pem {{ gitlab_server_name }}:/etc/gitlab/ssl"
    - "/home/{{ gitlab_service_account }}/{{ gitlab_server_hostname }}{{ domain }}.crt {{ gitlab_server_name }}:/etc/gitlab/ssl"
  when: not gitlab_ssl_dir_status.stat.exists | bool
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Create Systemd User Directory"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  file:
    path: "/home/{{ gitlab_service_account }}/.config/systemd/user"
    state: directory
  when:
    - not gitlab_service_file_status.stat.exists | bool
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Create Systemd Service Files for Gitlab Server"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  shell: "podman generate systemd --name {{ gitlab_server_name }} --files"
  args:
    chdir: "/home/{{ gitlab_service_account }}/.config/systemd/user/"
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Stop {{ gitlab_server_name }}"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  podman_container:
    name: "{{ gitlab_server_name }}"
    state: stopped
  tags:
    - initial_setup
    - create_gitlab

- name: "Deploy GitLab | Start {{ gitlab_server_name }} with Systemd"
  become: yes
  become_user: "{{ gitlab_service_account }}"
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ gitlab_service_account_uid }}"
  systemd:
    name: "container-{{ gitlab_server_name }}.service"
    state: started
    enabled: yes
    daemon_reload: yes
    scope: user
  tags:
    - initial_setup
    - create_gitlab

